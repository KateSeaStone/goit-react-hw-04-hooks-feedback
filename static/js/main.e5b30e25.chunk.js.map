{"version":3,"sources":["components/Feedback/Feedback.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Section/Section.js","components/Notification/Notification.js","components/Feedback/Feedback.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","FeedbackOptions","onLeaveFeedback","options","Object","keys","map","option","className","s","button","name","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","statList","statItem","label","count","Section","title","children","Notification","messages","Feedback","state","event","setState","prevState","target","countTotalFeedback","values","forEach","value","Math","round","this","feedback","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e5b30e25.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback\":\"Feedback_feedback__2W6NZ\",\"statList\":\"Feedback_statList__3rBxc\",\"statItem\":\"Feedback_statItem__13yUH\",\"button\":\"Feedback_button__1yDJM\",\"messages\":\"Feedback_messages__ksz5r\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from '../Feedback/Feedback.module.css';\r\n\r\nconst FeedbackOptions = ({ onLeaveFeedback, options }) => (\r\n  <>\r\n    {\r\n      Object.keys(options).map((option) => {\r\n        return <button key={option} className={s.button} name={option} type=\"button\" onClick={onLeaveFeedback}>{option}</button>\r\n\r\n      })\r\n    }\r\n  </>\r\n)\r\n\r\nexport default FeedbackOptions;\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.object.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from '../Feedback/Feedback.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n\r\n  <ul className={s.statList}>\r\n\r\n    <li className={s.statItem}>\r\n      <span className={s.label}>Good: </span>\r\n      <span className=\"count\">{good}</span>\r\n    </li>\r\n\r\n    <li className={s.statItem}>\r\n      <span className={s.label}>Neutral: </span>\r\n      <span className={s.count}>{neutral}</span>\r\n    </li>\r\n\r\n    <li className={s.statItem}>\r\n      <span className={s.label}>Bad: </span>\r\n      <span className={s.count}>{bad}</span>\r\n    </li>\r\n\r\n    <li className={s.statItem}>\r\n      <span className={s.label}>Total: </span>\r\n      <span className={s.count}>{total}</span>\r\n    </li>\r\n\r\n    <li className={s.statItem}>\r\n      <span className={s.label}>Positive feedback: </span>\r\n      <span className={s.count}>{positivePercentage}</span>\r\n    </li>\r\n\r\n  </ul>\r\n\r\n\r\n)\r\n\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from '../Feedback/Feedback.module.css';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section>\r\n    <h2 className={s.title}>{title}</h2>\r\n\r\n    {children}\r\n  </section>\r\n)\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n\r\n};","import React from 'react';\r\nimport s from '../Feedback/Feedback.module.css';\r\n\r\nconst Notification = () => (\r\n  <>\r\n    <p className={s.messages}>No feedback given</p>\r\n  </>\r\n)\r\n\r\nexport default Notification;\r\n\r\n\r\n","import React from 'react';\r\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\r\nimport Statistics from '../Statistics/Statistics';\r\nimport Section from '../Section/Section';\r\nimport Notification from '../Notification/Notification';\r\n\r\nimport s from './Feedback.module.css';\r\n\r\nclass Feedback extends React.Component {\r\n\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0\r\n  }\r\n\r\n  onLeaveFeedback = event => {\r\n\r\n    this.setState(prevState => ({\r\n      [event.target.name]: prevState[event.target.name] + 1,\r\n\r\n    })\r\n    )\r\n  }\r\n\r\n  // onLeaveFeedback = event => {\r\n  //   this.setState({ [event.target.name]: this.state[event.target.name] + 1 })    \r\n  // }\r\n\r\n  countTotalFeedback = () => {\r\n    let total = 0;\r\n    Object.values(this.state).forEach((value) => total = total + value)\r\n    return total;\r\n    //   return this.state.good + this.state.neutral + this.state.bad;\r\n  }\r\n\r\n  positivePercentage = () => {\r\n    const total = this.countTotalFeedback();\r\n    if (total === 0) return 0;\r\n    return Math.round(this.state.good * 100 / total);\r\n\r\n  }\r\n\r\n  render() {\r\n    const total = this.countTotalFeedback();\r\n    const positivePercentage = this.positivePercentage();\r\n    const { good, neutral, bad } = this.state;\r\n\r\n    return (\r\n      <div className={s.feedback}>\r\n\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions options={this.state} onLeaveFeedback={this.onLeaveFeedback} />\r\n        </Section>\r\n\r\n        {total === 0 ? (<Notification />) : (<Section title=\"Statistics\">\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={total}\r\n            positivePercentage={positivePercentage}\r\n          />\r\n        </Section>)}\r\n\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default Feedback;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import './App.css';\nimport Feedback from './components/Feedback/Feedback';\n\nfunction App() {\n  return (\n    <div>\n      <Feedback\n        title=\"Please leave feedback\" />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}