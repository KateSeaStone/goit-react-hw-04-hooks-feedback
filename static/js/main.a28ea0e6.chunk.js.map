{"version":3,"sources":["components/Feedback/Feedback.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Section/Section.js","components/Notification/Notification.js","components/Feedback/Feedback.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","FeedbackOptions","onLeaveFeedback","options","map","option","className","s","button","name","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","statList","statItem","label","count","Section","title","children","Notification","messages","Feedback","useState","setGood","setNeutral","setBad","feedback","event","target","Math","round","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a28ea0e6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback\":\"Feedback_feedback__2W6NZ\",\"statList\":\"Feedback_statList__3rBxc\",\"statItem\":\"Feedback_statItem__13yUH\",\"button\":\"Feedback_button__1yDJM\",\"messages\":\"Feedback_messages__ksz5r\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from '../Feedback/Feedback.module.css';\r\n\r\nconst FeedbackOptions = ({ onLeaveFeedback, options }) => (\r\n  <>\r\n    {\r\n      options.map((option) => {\r\n        return <button\r\n          key={option.name}\r\n          className={s.button}\r\n          name={option.name}\r\n          type=\"button\"\r\n          onClick={onLeaveFeedback}>{option.name}\r\n        </button>\r\n\r\n      })\r\n    }\r\n  </>\r\n)\r\n\r\nexport default FeedbackOptions;\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from '../Feedback/Feedback.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n\r\n  <ul className={s.statList}>\r\n\r\n    <li className={s.statItem}>\r\n      <span className={s.label}>Good: </span>\r\n      <span className=\"count\">{good}</span>\r\n    </li>\r\n\r\n    <li className={s.statItem}>\r\n      <span className={s.label}>Neutral: </span>\r\n      <span className={s.count}>{neutral}</span>\r\n    </li>\r\n\r\n    <li className={s.statItem}>\r\n      <span className={s.label}>Bad: </span>\r\n      <span className={s.count}>{bad}</span>\r\n    </li>\r\n\r\n    <li className={s.statItem}>\r\n      <span className={s.label}>Total: </span>\r\n      <span className={s.count}>{total}</span>\r\n    </li>\r\n\r\n    <li className={s.statItem}>\r\n      <span className={s.label}>Positive feedback: </span>\r\n      <span className={s.count}>{positivePercentage}</span>\r\n    </li>\r\n\r\n  </ul>\r\n\r\n\r\n)\r\n\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from '../Feedback/Feedback.module.css';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section>\r\n    <h2 className={s.title}>{title}</h2>\r\n\r\n    {children}\r\n  </section>\r\n)\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n\r\n};","import React from 'react';\r\nimport s from '../Feedback/Feedback.module.css';\r\n\r\nconst Notification = () => (\r\n  <>\r\n    <p className={s.messages}>No feedback given</p>\r\n  </>\r\n)\r\n\r\nexport default Notification;\r\n\r\n\r\n","import { useState } from 'react';\r\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\r\nimport Statistics from '../Statistics/Statistics';\r\nimport Section from '../Section/Section';\r\nimport Notification from '../Notification/Notification';\r\n\r\nimport s from './Feedback.module.css';\r\n\r\nexport default function Feedback() {\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n\r\n  const options = [\r\n    { name: 'good' },\r\n    { name: 'bad' },\r\n    { name: 'neutral' }\r\n  ]\r\n\r\n  const total = good + bad + neutral;\r\n\r\n  const onLeaveFeedback = event => {\r\n    switch (event.target.name) {\r\n      case 'good':\r\n        setGood(good + 1);\r\n        break;\r\n\r\n      case 'neutral':\r\n        setNeutral(neutral + 1);\r\n        break;\r\n\r\n      case 'bad':\r\n        setBad(bad + 1);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  const positivePercentage = () => {\r\n    if (total === 0) return 0;\r\n    return Math.round(good * 100 / total);\r\n  }\r\n\r\n  return (\r\n    <div className={s.feedback}>\r\n\r\n      <Section title=\"Please leave feedback\">\r\n        <FeedbackOptions options={options} onLeaveFeedback={onLeaveFeedback} />\r\n      </Section>\r\n\r\n      {total === 0 ? (<Notification />) : (<Section title=\"Statistics\">\r\n\r\n        <Statistics\r\n          good={good}\r\n          neutral={neutral}\r\n          bad={bad}\r\n          total={total}\r\n          positivePercentage={positivePercentage()}\r\n        />\r\n      </Section>\r\n      )}\r\n    </div >\r\n  )\r\n\r\n}\r\n\r\n\r\n","import './App.css';\nimport Feedback from './components/Feedback/Feedback';\n\nfunction App() {\n  return (\n    <div>\n      <Feedback\n        title=\"Please leave feedback\" />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}